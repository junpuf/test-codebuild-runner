name: hello world
on: [push]
jobs:
  default-job:
    runs-on:
      - codebuild-test-codebuild-runner-reserved-fleet-${{ github.run_id }}-${{ github.run_attempt }}
    steps:
      - name: checkout github code
        uses: actions/checkout@v4
      - name: runner setup
        run: .github/scripts/runner_setup.sh
      - name: check github files
        shell: bash
        run: |
          cat README.md
  ray-x86-image-build:
    runs-on:
      - codebuild-test-codebuild-runner-reserved-fleet-${{ github.run_id }}-${{ github.run_attempt }}
        fleet:ray-x86-image-builder
    steps:
      - name: checkout github code
        uses: actions/checkout@v4
      - name: runner setup
        run: .github/scripts/runner_setup.sh
      - name: build ray image
        shell: bash
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 152553844057.dkr.ecr.us-west-2.amazonaws.com
          DOCKER_BUILDKIT=1 docker build --build-arg CACHE_BUST_KEY=$(date +"%Y-%m-%d_%H-%M-%S") --tag ray:latest --progress plain -f docker/ray/Dockerfile .
          docker tag ray:latest 152553844057.dkr.ecr.us-west-2.amazonaws.com/ray:latest
          docker push 152553844057.dkr.ecr.us-west-2.amazonaws.com/ray:latest
  sglang-x86-image-build:
    runs-on:
      - codebuild-test-codebuild-runner-reserved-fleet-${{ github.run_id }}-${{ github.run_attempt }}
        fleet:sglang-x86-image-builder
    steps:
      - name: checkout github code
        uses: actions/checkout@v4
      - name: runner setup
        run: .github/scripts/runner_setup.sh
      - name: build sglang image
        shell: bash
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 152553844057.dkr.ecr.us-west-2.amazonaws.com
          DOCKER_BUILDKIT=1 docker build --build-arg CACHE_BUST_KEY=$(date +"%Y-%m-%d_%H-%M-%S") --tag sglang:latest --progress plain -f docker/sglang/Dockerfile .
          docker tag sglang:latest 152553844057.dkr.ecr.us-west-2.amazonaws.com/sglang:latest
          docker push 152553844057.dkr.ecr.us-west-2.amazonaws.com/sglang:latest
  ray-1gpu-image-test:
    needs: [ray-x86-image-build]
    runs-on:
      - codebuild-test-codebuild-runner-reserved-fleet-${{ github.run_id }}-${{ github.run_attempt }}
        fleet:x86-1gpu-image-tester
    steps:
      - name: checkout github code
        uses: actions/checkout@v4
      - name: runner setup
        run: .github/scripts/runner_setup.sh
      - name: pull docker images
        shell: bash
        run: |
          nvidia-smi
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 152553844057.dkr.ecr.us-west-2.amazonaws.com
          docker pull 152553844057.dkr.ecr.us-west-2.amazonaws.com/ray:latest
  sglang-1gpu-image-test:
    needs: [sglang-x86-image-build]
    runs-on:
      - codebuild-test-codebuild-runner-reserved-fleet-${{ github.run_id }}-${{ github.run_attempt }}
        fleet:x86-1gpu-image-tester
    steps:
      - name: checkout github code
        uses: actions/checkout@v4
      - name: runner setup
        run: .github/scripts/runner_setup.sh
      - name: pull docker images
        shell: bash
        run: |
          nvidia-smi
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 152553844057.dkr.ecr.us-west-2.amazonaws.com
          docker pull 152553844057.dkr.ecr.us-west-2.amazonaws.com/sglang:latest
          HUGGING_FACE_HUB_TOKEN=$(aws secretsmanager get-secret-value --secret-id HUGGING_FACE_HUB_TOKEN --query SecretString --output text)
          docker run --rm \
            -v ${HOME}/.cache/huggingface:/root/.cache/huggingface \
            -e "HUGGING_FACE_HUB_TOKEN=${HUGGING_FACE_HUB_TOKEN}" \
            --entrypoint /bin/bash \
            --gpus=all \
            152553844057.dkr.ecr.us-west-2.amazonaws.com/sglang:latest \
            -c "python -m sglang.launch_server --model-path Qwen/Qwen3-0.6B --reasoning-parser qwen3 && \
            python3 -m sglang.bench_serving \
            --backend sglang \
            --host 127.0.0.1 --port 30000 \
            --num-prompts 1000 \
            --model Qwen/Qwen3-0.6B"
